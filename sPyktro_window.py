# -*- coding: utf-8 -*-

################################################################################
## Form generated from reading UI file 'sPyktro.ui'
##
## Created by: Qt User Interface Compiler version 6.2.0
##
## WARNING! All changes made in this file will be lost when recompiling UI file!
################################################################################

from PySide6.QtCore import (QCoreApplication, QDate, QDateTime, QLocale,
    QMetaObject, QObject, QPoint, QRect,
    QSize, QTime, QUrl, Qt)
from PySide6.QtGui import (QAction, QBrush, QColor, QConicalGradient,
    QCursor, QFont, QFontDatabase, QGradient,
    QIcon, QImage, QKeySequence, QLinearGradient,
    QPainter, QPalette, QPixmap, QRadialGradient,
    QTransform)
from PySide6.QtWidgets import (QAbstractItemView, QApplication, QGridLayout, QHBoxLayout,
    QLabel, QLineEdit, QListWidget, QListWidgetItem,
    QMainWindow, QMenu, QMenuBar, QPushButton,
    QSizePolicy, QSpacerItem, QStatusBar, QWidget)

from pyqtgraph import PlotWidget

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        if not MainWindow.objectName():
            MainWindow.setObjectName(u"MainWindow")
        MainWindow.resize(856, 519)
        MainWindow.setMinimumSize(QSize(0, 0))
        self.actionAbout_sPyktro = QAction(MainWindow)
        self.actionAbout_sPyktro.setObjectName(u"actionAbout_sPyktro")
        self.actionNormalization = QAction(MainWindow)
        self.actionNormalization.setObjectName(u"actionNormalization")
        self.actionNornalization = QAction(MainWindow)
        self.actionNornalization.setObjectName(u"actionNornalization")
        self.actionDuplicate = QAction(MainWindow)
        self.actionDuplicate.setObjectName(u"actionDuplicate")
        self.actionUndo = QAction(MainWindow)
        self.actionUndo.setObjectName(u"actionUndo")
        self.actionRedo = QAction(MainWindow)
        self.actionRedo.setObjectName(u"actionRedo")
        self.actionPaste = QAction(MainWindow)
        self.actionPaste.setObjectName(u"actionPaste")
        self.actionCut = QAction(MainWindow)
        self.actionCut.setObjectName(u"actionCut")
        self.actionDelete = QAction(MainWindow)
        self.actionDelete.setObjectName(u"actionDelete")
        self.actionSelect_All = QAction(MainWindow)
        self.actionSelect_All.setObjectName(u"actionSelect_All")
        self.actionnew = QAction(MainWindow)
        self.actionnew.setObjectName(u"actionnew")
        self.actionSave = QAction(MainWindow)
        self.actionSave.setObjectName(u"actionSave")
        self.actionLoad = QAction(MainWindow)
        self.actionLoad.setObjectName(u"actionLoad")
        self.actionmodPoly = QAction(MainWindow)
        self.actionmodPoly.setObjectName(u"actionmodPoly")
        self.actionAssymetric_Least_Squares = QAction(MainWindow)
        self.actionAssymetric_Least_Squares.setObjectName(u"actionAssymetric_Least_Squares")
        self.actionAIR_penalized_Least_Squares = QAction(MainWindow)
        self.actionAIR_penalized_Least_Squares.setObjectName(u"actionAIR_penalized_Least_Squares")
        self.actionSavitzky_Golay = QAction(MainWindow)
        self.actionSavitzky_Golay.setObjectName(u"actionSavitzky_Golay")
        self.actionFind_Peaks = QAction(MainWindow)
        self.actionFind_Peaks.setObjectName(u"actionFind_Peaks")
        self.actionCurve_Fitting = QAction(MainWindow)
        self.actionCurve_Fitting.setObjectName(u"actionCurve_Fitting")
        self.actionHistory = QAction(MainWindow)
        self.actionHistory.setObjectName(u"actionHistory")
        self.actionInterpolation = QAction(MainWindow)
        self.actionInterpolation.setObjectName(u"actionInterpolation")
        self.actionSave_as = QAction(MainWindow)
        self.actionSave_as.setObjectName(u"actionSave_as")
        self.actionSave_image = QAction(MainWindow)
        self.actionSave_image.setObjectName(u"actionSave_image")
        self.actionExport_Matplotlib = QAction(MainWindow)
        self.actionExport_Matplotlib.setObjectName(u"actionExport_Matplotlib")
        self.actionPreference = QAction(MainWindow)
        self.actionPreference.setObjectName(u"actionPreference")
        self.actionColor = QAction(MainWindow)
        self.actionColor.setObjectName(u"actionColor")
        self.actionLinewidth = QAction(MainWindow)
        self.actionLinewidth.setObjectName(u"actionLinewidth")
        self.actionLoad_multiple = QAction(MainWindow)
        self.actionLoad_multiple.setObjectName(u"actionLoad_multiple")
        self.actionRename = QAction(MainWindow)
        self.actionRename.setObjectName(u"actionRename")
        self.centralwidget = QWidget(MainWindow)
        self.centralwidget.setObjectName(u"centralwidget")
        self.gridLayout = QGridLayout(self.centralwidget)
        self.gridLayout.setObjectName(u"gridLayout")
        self.horizontalLayout_2 = QHBoxLayout()
        self.horizontalLayout_2.setObjectName(u"horizontalLayout_2")
        self.graphWidget = PlotWidget(self.centralwidget)
        self.graphWidget.setObjectName(u"graphWidget")
        sizePolicy = QSizePolicy(QSizePolicy.Expanding, QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(5)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.graphWidget.sizePolicy().hasHeightForWidth())
        self.graphWidget.setSizePolicy(sizePolicy)
        self.graphWidget.setMinimumSize(QSize(720, 405))

        self.horizontalLayout_2.addWidget(self.graphWidget)

        self.listWidget = QListWidget(self.centralwidget)
        self.listWidget.setObjectName(u"listWidget")
        sizePolicy1 = QSizePolicy(QSizePolicy.Expanding, QSizePolicy.Expanding)
        sizePolicy1.setHorizontalStretch(1)
        sizePolicy1.setVerticalStretch(0)
        sizePolicy1.setHeightForWidth(self.listWidget.sizePolicy().hasHeightForWidth())
        self.listWidget.setSizePolicy(sizePolicy1)
        self.listWidget.setMinimumSize(QSize(100, 405))
        self.listWidget.setMaximumSize(QSize(200, 16777215))
        self.listWidget.setSelectionMode(QAbstractItemView.ExtendedSelection)

        self.horizontalLayout_2.addWidget(self.listWidget)


        self.gridLayout.addLayout(self.horizontalLayout_2, 0, 0, 1, 1)

        self.gridLayout_4 = QGridLayout()
        self.gridLayout_4.setObjectName(u"gridLayout_4")
        self.lineEdit_x_min = QLineEdit(self.centralwidget)
        self.lineEdit_x_min.setObjectName(u"lineEdit_x_min")
        sizePolicy2 = QSizePolicy(QSizePolicy.Minimum, QSizePolicy.Fixed)
        sizePolicy2.setHorizontalStretch(1)
        sizePolicy2.setVerticalStretch(0)
        sizePolicy2.setHeightForWidth(self.lineEdit_x_min.sizePolicy().hasHeightForWidth())
        self.lineEdit_x_min.setSizePolicy(sizePolicy2)
        self.lineEdit_x_min.setMinimumSize(QSize(50, 0))
        self.lineEdit_x_min.setMaximumSize(QSize(100, 16777215))

        self.gridLayout_4.addWidget(self.lineEdit_x_min, 0, 1, 1, 1)

        self.label_2 = QLabel(self.centralwidget)
        self.label_2.setObjectName(u"label_2")
        sizePolicy3 = QSizePolicy(QSizePolicy.Fixed, QSizePolicy.Fixed)
        sizePolicy3.setHorizontalStretch(0)
        sizePolicy3.setVerticalStretch(0)
        sizePolicy3.setHeightForWidth(self.label_2.sizePolicy().hasHeightForWidth())
        self.label_2.setSizePolicy(sizePolicy3)

        self.gridLayout_4.addWidget(self.label_2, 0, 2, 1, 1)

        self.label = QLabel(self.centralwidget)
        self.label.setObjectName(u"label")
        sizePolicy3.setHeightForWidth(self.label.sizePolicy().hasHeightForWidth())
        self.label.setSizePolicy(sizePolicy3)

        self.gridLayout_4.addWidget(self.label, 0, 0, 1, 1)

        self.lineEdit_x_max = QLineEdit(self.centralwidget)
        self.lineEdit_x_max.setObjectName(u"lineEdit_x_max")
        sizePolicy4 = QSizePolicy(QSizePolicy.Maximum, QSizePolicy.Fixed)
        sizePolicy4.setHorizontalStretch(1)
        sizePolicy4.setVerticalStretch(0)
        sizePolicy4.setHeightForWidth(self.lineEdit_x_max.sizePolicy().hasHeightForWidth())
        self.lineEdit_x_max.setSizePolicy(sizePolicy4)
        self.lineEdit_x_max.setMinimumSize(QSize(50, 0))
        self.lineEdit_x_max.setMaximumSize(QSize(100, 16777215))

        self.gridLayout_4.addWidget(self.lineEdit_x_max, 0, 3, 1, 1)

        self.label_3 = QLabel(self.centralwidget)
        self.label_3.setObjectName(u"label_3")
        sizePolicy3.setHeightForWidth(self.label_3.sizePolicy().hasHeightForWidth())
        self.label_3.setSizePolicy(sizePolicy3)

        self.gridLayout_4.addWidget(self.label_3, 0, 4, 1, 1)

        self.lineEdit_y_min = QLineEdit(self.centralwidget)
        self.lineEdit_y_min.setObjectName(u"lineEdit_y_min")
        sizePolicy4.setHeightForWidth(self.lineEdit_y_min.sizePolicy().hasHeightForWidth())
        self.lineEdit_y_min.setSizePolicy(sizePolicy4)
        self.lineEdit_y_min.setMinimumSize(QSize(50, 0))
        self.lineEdit_y_min.setMaximumSize(QSize(100, 16777215))

        self.gridLayout_4.addWidget(self.lineEdit_y_min, 0, 5, 1, 1)

        self.label_4 = QLabel(self.centralwidget)
        self.label_4.setObjectName(u"label_4")
        sizePolicy3.setHeightForWidth(self.label_4.sizePolicy().hasHeightForWidth())
        self.label_4.setSizePolicy(sizePolicy3)

        self.gridLayout_4.addWidget(self.label_4, 0, 6, 1, 1)

        self.lineEdit_y_max = QLineEdit(self.centralwidget)
        self.lineEdit_y_max.setObjectName(u"lineEdit_y_max")
        sizePolicy4.setHeightForWidth(self.lineEdit_y_max.sizePolicy().hasHeightForWidth())
        self.lineEdit_y_max.setSizePolicy(sizePolicy4)
        self.lineEdit_y_max.setMinimumSize(QSize(50, 0))
        self.lineEdit_y_max.setMaximumSize(QSize(100, 16777215))

        self.gridLayout_4.addWidget(self.lineEdit_y_max, 0, 7, 1, 1)

        self.pushUpdate = QPushButton(self.centralwidget)
        self.pushUpdate.setObjectName(u"pushUpdate")
        sizePolicy3.setHeightForWidth(self.pushUpdate.sizePolicy().hasHeightForWidth())
        self.pushUpdate.setSizePolicy(sizePolicy3)
        self.pushUpdate.setMinimumSize(QSize(95, 0))
        self.pushUpdate.setMaximumSize(QSize(95, 16777215))

        self.gridLayout_4.addWidget(self.pushUpdate, 0, 8, 1, 1)

        self.horizontalSpacer = QSpacerItem(40, 20, QSizePolicy.Expanding, QSizePolicy.Minimum)

        self.gridLayout_4.addItem(self.horizontalSpacer, 0, 10, 1, 1)

        self.pushButton_Reset = QPushButton(self.centralwidget)
        self.pushButton_Reset.setObjectName(u"pushButton_Reset")
        sizePolicy3.setHeightForWidth(self.pushButton_Reset.sizePolicy().hasHeightForWidth())
        self.pushButton_Reset.setSizePolicy(sizePolicy3)
        self.pushButton_Reset.setMinimumSize(QSize(95, 0))
        self.pushButton_Reset.setMaximumSize(QSize(95, 16777215))

        self.gridLayout_4.addWidget(self.pushButton_Reset, 0, 9, 1, 1)


        self.gridLayout.addLayout(self.gridLayout_4, 1, 0, 1, 1)

        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QMenuBar(MainWindow)
        self.menubar.setObjectName(u"menubar")
        self.menubar.setGeometry(QRect(0, 0, 856, 24))
        self.menuFile = QMenu(self.menubar)
        self.menuFile.setObjectName(u"menuFile")
        self.menuProcess = QMenu(self.menubar)
        self.menuProcess.setObjectName(u"menuProcess")
        self.menuProcess_2 = QMenu(self.menubar)
        self.menuProcess_2.setObjectName(u"menuProcess_2")
        self.menuBaseline_Correction = QMenu(self.menuProcess_2)
        self.menuBaseline_Correction.setObjectName(u"menuBaseline_Correction")
        self.menuFiltering = QMenu(self.menuProcess_2)
        self.menuFiltering.setObjectName(u"menuFiltering")
        self.menuAnalysis = QMenu(self.menubar)
        self.menuAnalysis.setObjectName(u"menuAnalysis")
        self.menuEdit = QMenu(self.menubar)
        self.menuEdit.setObjectName(u"menuEdit")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QStatusBar(MainWindow)
        self.statusbar.setObjectName(u"statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuProcess.menuAction())
        self.menubar.addAction(self.menuEdit.menuAction())
        self.menubar.addAction(self.menuProcess_2.menuAction())
        self.menubar.addAction(self.menuAnalysis.menuAction())
        self.menuFile.addAction(self.actionAbout_sPyktro)
        self.menuFile.addAction(self.actionPreference)
        self.menuProcess.addAction(self.actionLoad)
        self.menuProcess.addSeparator()
        self.menuProcess.addAction(self.actionSave)
        self.menuProcess.addAction(self.actionSave_as)
        self.menuProcess.addSeparator()
        self.menuProcess.addAction(self.actionSave_image)
        self.menuProcess_2.addAction(self.menuBaseline_Correction.menuAction())
        self.menuProcess_2.addAction(self.actionNormalization)
        self.menuProcess_2.addAction(self.menuFiltering.menuAction())
        self.menuProcess_2.addAction(self.actionInterpolation)
        self.menuProcess_2.addAction(self.actionNornalization)
        self.menuBaseline_Correction.addAction(self.actionmodPoly)
        self.menuBaseline_Correction.addAction(self.actionAssymetric_Least_Squares)
        self.menuFiltering.addAction(self.actionSavitzky_Golay)
        self.menuAnalysis.addAction(self.actionFind_Peaks)
        self.menuAnalysis.addAction(self.actionCurve_Fitting)
        self.menuEdit.addAction(self.actionUndo)
        self.menuEdit.addAction(self.actionRedo)
        self.menuEdit.addSeparator()
        self.menuEdit.addAction(self.actionRename)
        self.menuEdit.addAction(self.actionDuplicate)
        self.menuEdit.addAction(self.actionDelete)
        self.menuEdit.addAction(self.actionSelect_All)
        self.menuEdit.addSeparator()
        self.menuEdit.addAction(self.actionHistory)
        self.menuEdit.addSeparator()
        self.menuEdit.addAction(self.actionColor)
        self.menuEdit.addAction(self.actionLinewidth)

        self.retranslateUi(MainWindow)

        QMetaObject.connectSlotsByName(MainWindow)
    # setupUi

    def retranslateUi(self, MainWindow):
        MainWindow.setWindowTitle(QCoreApplication.translate("MainWindow", u"sPyktro", None))
        self.actionAbout_sPyktro.setText(QCoreApplication.translate("MainWindow", u"About sPyktro", None))
        self.actionNormalization.setText(QCoreApplication.translate("MainWindow", u"Correction", None))
        self.actionNornalization.setText(QCoreApplication.translate("MainWindow", u"Normalization", None))
        self.actionDuplicate.setText(QCoreApplication.translate("MainWindow", u"Duplicate", None))
#if QT_CONFIG(statustip)
        self.actionDuplicate.setStatusTip(QCoreApplication.translate("MainWindow", u"Duplicate the spectra", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(shortcut)
        self.actionDuplicate.setShortcut(QCoreApplication.translate("MainWindow", u"Ctrl+D", None))
#endif // QT_CONFIG(shortcut)
        self.actionUndo.setText(QCoreApplication.translate("MainWindow", u"Undo", None))
#if QT_CONFIG(statustip)
        self.actionUndo.setStatusTip(QCoreApplication.translate("MainWindow", u"Undo the previous command", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(shortcut)
        self.actionUndo.setShortcut(QCoreApplication.translate("MainWindow", u"Ctrl+Z", None))
#endif // QT_CONFIG(shortcut)
        self.actionRedo.setText(QCoreApplication.translate("MainWindow", u"Redo", None))
#if QT_CONFIG(statustip)
        self.actionRedo.setStatusTip(QCoreApplication.translate("MainWindow", u"Redo the previous command", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(shortcut)
        self.actionRedo.setShortcut(QCoreApplication.translate("MainWindow", u"Ctrl+Shift+Z", None))
#endif // QT_CONFIG(shortcut)
        self.actionPaste.setText(QCoreApplication.translate("MainWindow", u"Paste", None))
#if QT_CONFIG(statustip)
        self.actionPaste.setStatusTip(QCoreApplication.translate("MainWindow", u"Paste the selected spectra", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(shortcut)
        self.actionPaste.setShortcut(QCoreApplication.translate("MainWindow", u"Ctrl+V", None))
#endif // QT_CONFIG(shortcut)
        self.actionCut.setText(QCoreApplication.translate("MainWindow", u"Cut", None))
#if QT_CONFIG(statustip)
        self.actionCut.setStatusTip(QCoreApplication.translate("MainWindow", u"Cut the selected spectra", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(shortcut)
        self.actionCut.setShortcut(QCoreApplication.translate("MainWindow", u"Ctrl+X", None))
#endif // QT_CONFIG(shortcut)
        self.actionDelete.setText(QCoreApplication.translate("MainWindow", u"Delete", None))
#if QT_CONFIG(statustip)
        self.actionDelete.setStatusTip(QCoreApplication.translate("MainWindow", u"Delete the selected spectra", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(shortcut)
        self.actionDelete.setShortcut(QCoreApplication.translate("MainWindow", u"Ctrl+Backspace", None))
#endif // QT_CONFIG(shortcut)
        self.actionSelect_All.setText(QCoreApplication.translate("MainWindow", u"Select All", None))
#if QT_CONFIG(statustip)
        self.actionSelect_All.setStatusTip(QCoreApplication.translate("MainWindow", u"Select all spectra", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(shortcut)
        self.actionSelect_All.setShortcut(QCoreApplication.translate("MainWindow", u"Ctrl+A", None))
#endif // QT_CONFIG(shortcut)
        self.actionnew.setText(QCoreApplication.translate("MainWindow", u"New", None))
#if QT_CONFIG(statustip)
        self.actionnew.setStatusTip(QCoreApplication.translate("MainWindow", u"Create a new spectra", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(shortcut)
        self.actionnew.setShortcut(QCoreApplication.translate("MainWindow", u"Ctrl+N", None))
#endif // QT_CONFIG(shortcut)
        self.actionSave.setText(QCoreApplication.translate("MainWindow", u"Save", None))
#if QT_CONFIG(statustip)
        self.actionSave.setStatusTip(QCoreApplication.translate("MainWindow", u"Save a spectra file", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(shortcut)
        self.actionSave.setShortcut(QCoreApplication.translate("MainWindow", u"Ctrl+S", None))
#endif // QT_CONFIG(shortcut)
        self.actionLoad.setText(QCoreApplication.translate("MainWindow", u"Load", None))
#if QT_CONFIG(statustip)
        self.actionLoad.setStatusTip(QCoreApplication.translate("MainWindow", u"Load a spectra file", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(shortcut)
        self.actionLoad.setShortcut(QCoreApplication.translate("MainWindow", u"Ctrl+L", None))
#endif // QT_CONFIG(shortcut)
        self.actionmodPoly.setText(QCoreApplication.translate("MainWindow", u"Modified Polynomial Fitting", None))
        self.actionAssymetric_Least_Squares.setText(QCoreApplication.translate("MainWindow", u"Assymetric Least Squares", None))
        self.actionAIR_penalized_Least_Squares.setText(QCoreApplication.translate("MainWindow", u"AIR Penalized Least Squares", None))
        self.actionSavitzky_Golay.setText(QCoreApplication.translate("MainWindow", u"Savitzky-Golay", None))
        self.actionFind_Peaks.setText(QCoreApplication.translate("MainWindow", u"Find Peaks", None))
        self.actionCurve_Fitting.setText(QCoreApplication.translate("MainWindow", u"Curve Fitting", None))
        self.actionHistory.setText(QCoreApplication.translate("MainWindow", u"History", None))
        self.actionInterpolation.setText(QCoreApplication.translate("MainWindow", u"Interpolation", None))
        self.actionSave_as.setText(QCoreApplication.translate("MainWindow", u"Save as", None))
        self.actionSave_image.setText(QCoreApplication.translate("MainWindow", u"Save Image", None))
        self.actionExport_Matplotlib.setText(QCoreApplication.translate("MainWindow", u"Matplotlib Figure", None))
        self.actionPreference.setText(QCoreApplication.translate("MainWindow", u"Preferences...", None))
        self.actionColor.setText(QCoreApplication.translate("MainWindow", u"Line Color", None))
        self.actionLinewidth.setText(QCoreApplication.translate("MainWindow", u"Line Width", None))
        self.actionLoad_multiple.setText(QCoreApplication.translate("MainWindow", u"Load multiple", None))
        self.actionRename.setText(QCoreApplication.translate("MainWindow", u"Rename", None))
#if QT_CONFIG(statustip)
        self.actionRename.setStatusTip(QCoreApplication.translate("MainWindow", u"Rename the spectra", None))
#endif // QT_CONFIG(statustip)
        self.label_2.setText(QCoreApplication.translate("MainWindow", u"X Max:", None))
        self.label.setText(QCoreApplication.translate("MainWindow", u"X Min:", None))
        self.label_3.setText(QCoreApplication.translate("MainWindow", u"Y Min:", None))
        self.label_4.setText(QCoreApplication.translate("MainWindow", u"Y Max:", None))
        self.pushUpdate.setText(QCoreApplication.translate("MainWindow", u"Set Axis", None))
        self.pushButton_Reset.setText(QCoreApplication.translate("MainWindow", u"See All", None))
        self.menuFile.setTitle(QCoreApplication.translate("MainWindow", u"sPyktro", None))
        self.menuProcess.setTitle(QCoreApplication.translate("MainWindow", u"File", None))
        self.menuProcess_2.setTitle(QCoreApplication.translate("MainWindow", u"Process", None))
        self.menuBaseline_Correction.setTitle(QCoreApplication.translate("MainWindow", u"Baseline Correction", None))
        self.menuFiltering.setTitle(QCoreApplication.translate("MainWindow", u"Filtering", None))
        self.menuAnalysis.setTitle(QCoreApplication.translate("MainWindow", u"Analysis", None))
        self.menuEdit.setTitle(QCoreApplication.translate("MainWindow", u"Edit", None))
    # retranslateUi

